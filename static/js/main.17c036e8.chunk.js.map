{"version":3,"sources":["pages/SignIn/index.js","pages/SignIn/SignIn.js","pages/SignUp/index.js","pages/SignUp/SignUp.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","useState","checkBox","turnOnOffCheckBox","emailStorage","localStorage","getItem","passwordStorage","formData","useRef","email","password","emailClass","setEmailClass","passwordClass","setPasswordClass","checkEmailErr","test","current","checkPasswordErr","changeValue","value","name","length","checkValidation","className","xmlns","width","height","viewBox","d","type","placeholder","onInput","e","target","defaultValue","onChange","onClick","console","log","setItem","to","SignUp","firstName","lastName","firstNameClass","setFirstNameClass","lastNameClass","setLastNameClass","checkFirstNameErr","checkLastNameErr","routes","path","component","exact","App","map","route","key","toString","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+QAEeA,G,MCEA,WAAO,IAAD,EACqBC,oBAAS,GAD9B,mBACVC,EADU,KACAC,EADA,KAEbC,EAAeC,aAAaC,QAAQ,SACpCC,EAAkBF,aAAaC,QAAQ,YACtB,OAAjBF,IACAA,EAAe,IAEK,OAApBG,IACAA,EAAkB,IAGtB,IAAMC,EAAWC,iBAAO,CACpBC,MAAON,EACPO,SAAUJ,IAbG,EAgBmBN,mBAAS,IAhB5B,mBAgBVW,EAhBU,KAgBEC,EAhBF,OAiByBZ,mBAAS,IAjBlC,mBAiBVa,EAjBU,KAiBKC,EAjBL,KAmBXC,EAAgB,WAElB,OADY,kBACAC,KAAKT,EAASU,QAAQR,QAGhCS,EAAmB,WAErB,OADY,0CACAF,KAAKT,EAASU,QAAQP,WAsBhCS,EAAc,SAACC,EAAOC,GACxBd,EAASU,QAAQI,GAAQD,EApBL,WAAO,IAAD,EACEb,EAASU,QAA7BR,EADkB,EAClBA,MAAOC,EADW,EACXA,SACXK,KAAmBN,EAAMa,OAAS,EAClCV,EAAc,eACPG,KAAmBN,EAAMa,OAAS,EACzCV,EAAc,gBAGdA,EAAc,IAEdM,KAAsBR,EAASY,OAAS,EACxCR,EAAiB,eACVI,KAAsBR,EAASY,OAAS,EAC/CR,EAAiB,gBAEjBA,EAAiB,IAMrBS,IAqBJ,OACI,yBAAKC,UAAU,SACX,0BAAMA,UAAU,UAChB,yBAAKA,UAAU,OAAM,yBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAAY,0BAAMC,EAAE,mPAC5G,0CAIA,2BACIC,KAAK,OACLT,KAAK,QACLG,UAAS,qBAAgBb,GACzBoB,YAAY,kBACZC,QAAS,SAAAC,GAAC,OAAId,EAAYc,EAAEC,OAAOd,MAAO,UAC1Ce,aAAc5B,EAASU,QAAQR,QAEnC,2BACIqB,KAAK,OACLT,KAAK,OACLG,UAAS,wBAAmBX,GAC5BkB,YAAY,aACZC,QAAS,SAAAC,GAAC,OAAId,EAAYc,EAAEC,OAAOd,MAAO,aAC1Ce,aAAc5B,EAASU,QAAQP,WAGnC,2BAAOc,UAAU,aACb,2BACIM,KAAK,WACLM,SAAU,SAAAH,GAAC,OAAI/B,GAAmBD,MAH1C,cAMI,0BAAMuB,UAAU,eAGpB,4BAAQM,KAAK,SAASO,QApDZ,WAAO,IAAD,EAGnB9B,EAASU,QADVR,EAFoB,EAEpBA,MAAOC,EAFa,EAEbA,SAENK,KAAoBG,IAQvBoB,QAAQC,IAAI,8JAPNtC,IACAG,aAAaoC,QAAQ,QAAS/B,GAC9BL,aAAaoC,QAAQ,WAAY9B,IAErC4B,QAAQC,IAAI,gBACZD,QAAQC,IAAI9B,EAAOC,MA0Cf,YAEA,0BAAMc,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,QAAQiB,GAAG,YAA3B,oBACA,kBAAC,IAAD,CAAMjB,UAAU,QAAQiB,GAAG,YAA3B,mCAGJ,2BAAOjB,UAAU,aAAjB,yCClHDkB,G,MCEA,WAAO,IAAD,EAEqB1C,oBAAS,GAF9B,mBAEVC,EAFU,KAEAC,EAFA,KAIXK,EAAWC,iBAAO,CACpBmC,UAAW,GACXC,SAAU,GACVnC,MAAO,GACPC,SAAU,KARG,EAW2BV,mBAAS,IAXpC,mBAWV6C,EAXU,KAWMC,EAXN,OAYyB9C,mBAAS,IAZlC,mBAYV+C,EAZU,KAYKC,EAZL,OAamBhD,mBAAS,IAb5B,mBAaVW,EAbU,KAaEC,EAbF,OAcyBZ,mBAAS,IAdlC,mBAcVa,EAdU,KAcKC,EAdL,KAiBXmC,EAAoB,WAEtB,OADY,oBACAjC,KAAKT,EAASU,QAAQ0B,YAGhCO,EAAmB,WAErB,OADY,oBACAlC,KAAKT,EAASU,QAAQ2B,WAEhC7B,EAAgB,WAElB,OADY,kBACAC,KAAKT,EAASU,QAAQR,QAGhCS,EAAmB,WAErB,OADY,0CACAF,KAAKT,EAASU,QAAQP,WA0ChCS,EAAc,SAACC,EAAOC,GACxBd,EAASU,QAAQI,GAAQD,EAxCL,WAAO,IAAD,EAEuBb,EAASU,QAAlD0B,EAFkB,EAElBA,UAAWC,EAFO,EAEPA,SAAUnC,EAFH,EAEGA,MAAOC,EAFV,EAEUA,SAEhCuC,KAAuBN,EAAUrB,OAAS,EAC1CwB,EAAkB,eACXG,KAAuBN,EAAUrB,OAAS,EACjDwB,EAAkB,gBAElBA,EAAkB,IAGlBI,KAAsBN,EAAStB,OAAS,EACxC0B,EAAiB,eACVE,KAAsBN,EAAStB,OAAS,EAC/C0B,EAAiB,gBAEjBA,EAAiB,IAGjBjC,KAAmBN,EAAMa,OAAS,EAClCV,EAAc,eACPG,KAAmBN,EAAMa,OAAS,EACzCV,EAAc,gBAGdA,EAAc,IAGdM,KAAsBR,EAASY,OAAS,EACxCR,EAAiB,eACVI,KAAsBR,EAASY,OAAS,EAC/CR,EAAiB,gBAEjBA,EAAiB,IAOrBS,IAiBJ,OACI,yBAAKC,UAAU,SAEX,0BAAMA,UAAU,UACZ,yBAAKA,UAAU,OAAM,yBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAAY,0BAAMC,EAAE,mPAChH,0CAEQ,6BACR,0BAAML,UAAU,qBACZ,2BACIA,UAAS,yBAAoBqB,GAC7Bf,KAAK,OACLT,KAAK,YACLU,YAAY,eACZC,QAAS,SAAAC,GAAC,OAAId,EAAYc,EAAEC,OAAOd,MAAO,gBAE9C,2BACII,UAAS,wBAAmBuB,GAC5BjB,KAAK,OACLT,KAAK,WACLU,YAAY,cACZC,QAAS,SAAAC,GAAC,OAAId,EAAYc,EAAEC,OAAOd,MAAO,gBAE3C,6BACP,2BACII,UAAS,sBAAiBb,GAC1BmB,KAAK,OACLT,KAAK,QACLU,YAAY,kBACZC,QAAS,SAAAC,GAAC,OAAId,EAAYc,EAAEC,OAAOd,MAAO,YAC5C,6BACF,2BACII,UAAS,yBAAoBX,GAC7BiB,KAAK,OACLT,KAAK,WACLU,YAAY,aACZC,QAAS,SAAAC,GAAC,OAAId,EAAYc,EAAEC,OAAOd,MAAO,eAG9C,2BAAOI,UAAU,cACb,2BACIM,KAAK,WACLM,SAAU,SAAAH,GAAC,OAAI/B,GAAmBD,MAH1C,4CAK6C,6BAL7C,mCAOI,0BAAMuB,UAAU,gBAGpB,4BAAQM,KAAK,SAASO,QA/DZ,WAAO,IAAD,EAGnB9B,EAASU,QADV0B,EAFoB,EAEpBA,UAAWC,EAFS,EAETA,SAAUnC,EAFD,EAECA,MAAOC,EAFR,EAEQA,SAE3BuC,KAAwBC,KAAuBnC,KAAoBG,IAItEoB,QAAQC,IAAI,8JAHVD,QAAQC,IAAI,gBACZD,QAAQC,IAAII,EAAWC,EAAUnC,EAAOC,MAyDpC,WAGA,yBAAKc,UAAU,oBACX,kBAAC,IAAD,CAAMiB,GAAG,YAAT,qCAEJ,2BAAOjB,UAAU,aAAjB,yCC9HD2B,EArBA,CACb,CACEC,KAAM,WACNC,UAAW,kBAAC,EAAD,OAEb,CACED,KAAM,WACNC,UAAW,kBAAC,EAAD,OAEb,CACED,KAAM,IACNC,UAAW,kBAAC,EAAD,MACXC,OAAO,GAET,CACEF,KAAM,2BACNC,UAAW,kBAAC,EAAD,MACXC,OAAO,ICUIC,MAxBf,WACE,OACE,yBAAK/B,UAAU,OACf,kBAAC,IAAD,KACA,oCACE,kBAAC,IAAD,KAEI2B,EAAOK,KAAI,SAAAC,GAAK,OACd,kBAAC,IAAD,CACEH,MAAOG,EAAMH,MACbI,IAAKD,EAAME,WACXP,KAAMK,EAAML,MAEXK,EAAMJ,mBCVDO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvC,QAAQuC,MAAMA,EAAMC,c","file":"static/js/main.17c036e8.chunk.js","sourcesContent":["import SignIn from './SignIn';\n\nexport default SignIn;","import React, { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './SignIn.css';\n\nconst SignIn = () => {\n    const [checkBox, turnOnOffCheckBox] = useState(false);\n    let emailStorage = localStorage.getItem('email');\n    let passwordStorage = localStorage.getItem('password');\n    if (emailStorage === null){\n        emailStorage = '';\n    } \n    if (passwordStorage === null){\n        passwordStorage = '';\n    } \n\n    const formData = useRef({\n        email: emailStorage,\n        password: passwordStorage,\n    });\n    \n    const [emailClass, setEmailClass] = useState('');\n    const [passwordClass, setPasswordClass] = useState('');\n\n    const checkEmailErr = () => {\n        const reg = /^...+@..+\\...+$/;\n        return !reg.test(formData.current.email);\n    };\n\n    const checkPasswordErr = () => {\n        const reg = /^(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n        return !reg.test(formData.current.password);\n    };\n\n    const checkValidation = () => {\n        const { email, password } = formData.current;\n        if (checkEmailErr() && email.length > 0) {\n            setEmailClass('errorInput');\n        } else if(!checkEmailErr() && email.length > 0) {\n            setEmailClass('correctInput');\n        }\n        else {\n            setEmailClass('');\n        }\n        if (checkPasswordErr() && password.length > 0) {\n            setPasswordClass('errorInput');\n        } else if(!checkPasswordErr() && password.length > 0){\n            setPasswordClass('correctInput');\n        } else {\n            setPasswordClass('');\n        }\n    };\n\n    const changeValue = (value, name) => {\n        formData.current[name] = value;\n        checkValidation();\n    };\n\n    const onButtonClick = () => {\n         const {\n            email, password\n         } = formData.current;\n        if (!checkEmailErr() && !checkPasswordErr()) {\n            if (checkBox){\n                localStorage.setItem('email', email);\n                localStorage.setItem('password', password);\n            }\n            console.log('all is goood');\n            console.log(email, password);\n        } else {\n          console.log('Вы ввели неправильные данные');\n        }\n    }\n\n   \n    \n    return (\n        <div className=\"form1\">   \n            <form className=\"signIn\">\n            <div className=\"ico\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H8.9V6zM18 20H6V10h12v10z\"/></svg></div>\n                <label>\n                    Sign in\n                </label>\n                \n                <input \n                    type=\"text\" \n                    name=\"email\"\n                    className={`inputEmail ${emailClass}`} \n                    placeholder=\"Email Address *\" \n                    onInput={e => changeValue(e.target.value, 'email')}\n                    defaultValue={formData.current.email}\n                />\n                <input \n                    type=\"text\" \n                    name=\"pass\" \n                    className={`inputPassword ${passwordClass}`}\n                    placeholder=\"Password *\" \n                    onInput={e => changeValue(e.target.value, 'password')}\n                    defaultValue={formData.current.password}\n                />                \n                \n                <label className=\"container\">\n                    <input \n                        type=\"checkbox\" \n                        onChange={e => turnOnOffCheckBox(!checkBox)}\n                    />\n                        Remember me\n                    <span className=\"checkmark\"></span>\n                </label>   \n                \n                <button type=\"button\" onClick={onButtonClick}> SIGN IN</button>\n\n                <span className=\"linkAnotherPage\">\n                    <Link className=\"link1\" to=\"/sign-in\">Forgot password?</Link>\n                    <Link className=\"link2\" to=\"/sign-up\">Don't have an account? Sign Up</Link>              \n                </span>\n\n                <label className=\"copyright\">\n                    Copyright © Your Website 2020.\n                </label>\n            </form> \n        </div>  \n        \n    )\n}\n\nexport default SignIn\n","import SignUp from './SignUp';\n\nexport default SignUp;","import React, { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './SignUp.css';\n\nconst SignUp = () => {\n    \n    const [checkBox, turnOnOffCheckBox] = useState(false);\n\n    const formData = useRef({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n    });\n    \n    const [firstNameClass, setFirstNameClass] = useState('');\n    const [lastNameClass, setLastNameClass] = useState('');\n    const [emailClass, setEmailClass] = useState('');\n    const [passwordClass, setPasswordClass] = useState('');\n\n\n    const checkFirstNameErr = () => {\n        const reg = /[a-zA-Z0-9-_]{3,}/;\n        return !reg.test(formData.current.firstName);\n    };\n\n    const checkLastNameErr = () => {\n        const reg = /[a-zA-Z0-9-_]{3,}/;\n        return !reg.test(formData.current.lastName);\n    };\n    const checkEmailErr = () => {\n        const reg = /^...+@..+\\...+$/;\n        return !reg.test(formData.current.email);\n    };\n\n    const checkPasswordErr = () => {\n        const reg = /^(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n        return !reg.test(formData.current.password);\n    };\n\n    const checkValidation = () => {\n        \n        const { firstName, lastName, email, password } = formData.current;\n\n        if (checkFirstNameErr() && firstName.length > 0) {\n            setFirstNameClass('errorInput');\n        } else if(!checkFirstNameErr() && firstName.length > 0){\n            setFirstNameClass('correctInput');\n        } else {\n            setFirstNameClass('');\n        }\n\n        if (checkLastNameErr() && lastName.length > 0) {\n            setLastNameClass('errorInput');\n        } else if(!checkLastNameErr() && lastName.length > 0){\n            setLastNameClass('correctInput');\n        } else {\n            setLastNameClass('');\n        }\n\n        if (checkEmailErr() && email.length > 0) {\n            setEmailClass('errorInput');\n        } else if(!checkEmailErr() && email.length > 0) {\n            setEmailClass('correctInput');\n        }\n        else {\n            setEmailClass('');\n        }\n\n        if (checkPasswordErr() && password.length > 0) {\n            setPasswordClass('errorInput');\n        } else if(!checkPasswordErr() && password.length > 0){\n            setPasswordClass('correctInput');\n        } else {\n            setPasswordClass('');\n        }\n        \n    };\n\n    const changeValue = (value, name) => {\n        formData.current[name] = value;\n        checkValidation();\n    };\n\n    const onButtonClick = () => {\n         const {\n            firstName, lastName, email, password\n         } = formData.current;\n        if (!checkFirstNameErr() && !checkLastNameErr() && !checkEmailErr() && !checkPasswordErr()) {\n            console.log('all is goood');\n            console.log(firstName, lastName, email, password);\n        } else {\n          console.log('Вы ввели неправильные данные');\n        }\n    }\n\n\n\n    return (\n        <div className=\"form2\">   \n\n            <form className=\"signUp\">\n                <div className=\"ico\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H8.9V6zM18 20H6V10h12v10z\"/></svg></div>\n                <label>\n                Sign up\n                </label><br/>\n                <span className=\"firstNamelastName\">\n                    <input \n                        className={`inputFirstName ${firstNameClass}`}\n                        type=\"text\" \n                        name=\"firstName\" \n                        placeholder=\"First Name *\" \n                        onInput={e => changeValue(e.target.value, 'firstName')}\n                    />\n                    <input \n                        className={`inputLastName ${lastNameClass}`}\n                        type=\"text\" \n                        name=\"lastName\" \n                        placeholder=\"Last Name *\" \n                        onInput={e => changeValue(e.target.value, 'lastName')}\n                    />\n                </span><br/>\n                <input  \n                    className={`inputEmail2 ${emailClass}`}\n                    type=\"text\" \n                    name=\"email\" \n                    placeholder=\"Email Address *\" \n                    onInput={e => changeValue(e.target.value, 'email')}\n                /><br/>\n                <input  \n                    className={`inputPassword2 ${passwordClass}`}\n                    type=\"text\" \n                    name=\"password\" \n                    placeholder=\"Password *\" \n                    onInput={e => changeValue(e.target.value, 'password')}\n                />\n\n                <label className=\"container1\">\n                    <input \n                        type=\"checkbox\" \n                        onChange={e => turnOnOffCheckBox(!checkBox)}\n                    />\n                    I want to receive inspiration, marketing <br/>\n                    promotions and update via email.\n                    <span className=\"checkmark1\"></span>\n                </label>   \n            \n                <button type=\"button\" onClick={onButtonClick}>\n                    SIGN UP\n                </button>\n                <div className=\"linkAnotherPage2\">\n                    <Link to=\"/sign-in\">Already have an account? Sign in</Link>\n                </div>\n                <label className=\"copyright\">\n                    Copyright © Your Website 2020.\n                </label>           \n            </form> \n        </div>\n    )\n}\n\nexport default SignUp;\n","import React from 'react';\n\nimport SignIn from './pages/SignIn/';\nimport SignUp from './pages/SignUp';\n\n\nconst routes = [\n  {\n    path: '/sign-in',\n    component: <SignIn />,\n  },\n  {\n    path: '/sign-up',\n    component: <SignUp />,\n  },\n  {\n    path: '/',\n    component: <SignIn />,\n    exact: true,\n  },\n  {\n    path: '/Cursor-React-Homework5/',\n    component: <SignIn />,\n    exact: true,\n  },\n];\n\nexport default routes;","import React from 'react';\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport routes from './routes';\n\nfunction App() {\n  return(\n    <div className=\"app\">\n    <Router>\n    <>\n      <Switch>\n        {\n          routes.map(route => (\n            <Route\n              exact={route.exact}\n              key={route.toString()}\n              path={route.path}\n            >\n              {route.component}\n            </Route>\n                ))\n        }\n      </Switch>      \n    </>   \n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}